/* Box sizing rules */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Prevent font size inflation */
html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
    list-style: none;
}

/* Set core body defaults */
body {
    min-height: 100vh;
    line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
    line-height: 1.1;
}

/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
    text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
    text-decoration-skip-ink: auto;
    color: currentColor;
}

/* Make images easier to work with */
img,
picture {
    max-width: 100%;
    display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
    font: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
    min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
    scroll-margin-block: 5ex;
}

/* Personal reset prefernces */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
}

button {
    cursor: pointer;
    background-color: transparent;
    border: 0;
    color: inherit;
}

p {
    text-wrap: pretty;
}

svg {
    width: 1.5rem;
    aspect-ratio: 1;
}

a {
    text-decoration: none;
    color: inherit;
}

/* Custom properties */
:root {
    --clr-primary: 213 14% 42%;
    --clr-secondary: 208 83% 95%;
    --clr-accent: 200 75% 32%;
    --clr-light: 0 0% 100%;

    --step--2: clamp(0.3819rem, 0.4568rem + -0.0967vw, 0.4375rem);
    --step--1: clamp(0.6181rem, 0.619rem + -0.0011vw, 0.6188rem);
    --step-0: clamp(0.875rem, 0.8315rem + 0.2174vw, 1rem);
    --step-1: clamp(1.2375rem, 1.1051rem + 0.662vw, 1.6181rem);
    --step-2: clamp(1.7494rem, 1.4472rem + 1.5109vw, 2.6181rem);
    --step-3: clamp(2.4738rem, 1.8609rem + 3.0641vw, 4.2356rem);
    --step-4: clamp(3.4981rem, 2.331rem + 5.8359vw, 6.8538rem);
    --step-5: clamp(4.9463rem, 2.8097rem + 10.6826vw, 11.0887rem);

    --space-3xs: clamp(0.25rem, 0.25rem + 0vw, 0.25rem);
    --space-2xs: clamp(0.4375rem, 0.4158rem + 0.1087vw, 0.5rem);
    --space-xs: clamp(0.6875rem, 0.6658rem + 0.1087vw, 0.75rem);
    --space-s: clamp(0.875rem, 0.8315rem + 0.2174vw, 1rem);
    --space-m: clamp(1.3125rem, 1.2473rem + 0.3261vw, 1.5rem);
    --space-l: clamp(1.75rem, 1.663rem + 0.4348vw, 2rem);
    --space-xl: clamp(2.625rem, 2.4946rem + 0.6522vw, 3rem);
    --space-2xl: clamp(3.5rem, 3.3261rem + 0.8696vw, 4rem);
    --space-3xl: clamp(5.25rem, 4.9891rem + 1.3043vw, 6rem);

    /* One-up pairs */
    --space-3xs-2xs: clamp(0.25rem, 0.163rem + 0.4348vw, 0.5rem);
    --space-2xs-xs: clamp(0.4375rem, 0.3288rem + 0.5435vw, 0.75rem);
    --space-xs-s: clamp(0.6875rem, 0.5788rem + 0.5435vw, 1rem);
    --space-s-m: clamp(0.875rem, 0.6576rem + 1.087vw, 1.5rem);
    --space-m-l: clamp(1.3125rem, 1.0734rem + 1.1957vw, 2rem);
    --space-l-xl: clamp(1.75rem, 1.3152rem + 2.1739vw, 3rem);
    --space-xl-2xl: clamp(2.625rem, 2.1467rem + 2.3913vw, 4rem);
    --space-2xl-3xl: clamp(3.5rem, 2.6304rem + 4.3478vw, 6rem);

    /* Custom pairs */
    --space-s-l: clamp(0.875rem, 0.4837rem + 1.9565vw, 2rem);

    --fs-900: var(--step-5);
    --fs-800: var(--step-4);
    --fs-700: var(--step-3);
    --fs-600: var(--step-2);
    --fs-500: var(--step-1);
    --fs-400: var(--step-0);
    --fs-300: var(--step--1);
    --fs-200: var(--step--2);

    --ff-heading: "Oswald", sans-serif;
    --ff-body: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif,
        "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";

    --fw-normal: 400;
    --fw-bold: 700;
}

/* Utility classes */
/* Typography */
.bg-primary {
    background-color: hsl(var(--clr-primary));
}

.bg-secondary {
    background-color: hsl(var(--clr-secondary));
}

.bg-accent {
    background-color: hsl(var(--clr-accent));
}

.bg-light {
    background-color: hsl(var(--clr-light));
}

.text-primary {
    color: hsl(var(--clr-primary));
}

.text-secondary {
    color: hsl(var(--clr-secondary));
}

.text-accent {
    color: hsl(var(--clr-accent));
}

.text-light {
    color: hsl(var(--clr-light));
}

.fs-900 {
    font-size: var(--fs-900);
}

.fs-800 {
    font-size: var(--fs-800);
}

.fs-700 {
    font-size: var(--fs-700);
}

.fs-600 {
    font-size: var(--fs-600);
}

.fs-500 {
    font-size: var(--fs-500);
}

.fs-400 {
    font-size: var(--fs-400);
}

.fs-300 {
    font-size: var(--fs-300);
}

.fs-200 {
    font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600,
.fs-500 {
    line-height: 1.1;
}

.fs-400,
.fs-300,
.fs-200 {
    line-height: 1.6;
}

.ff-heading {
    font-family: var(--ff-heading);
}

.ff-body {
    font-family: var(--ff-body);
}

.fw-normal {
    font-weight: var(--fw-normal);
}

.fw-bold {
    font-weight: var(--fw-bold);
}

.uppercase {
    text-transform: uppercase;
}

.text-center {
    text-align: center;
}

.italic {
    font-style: italic;
}

/* Layout */
.wrapper {
    max-width: 60rem;
    margin-inline: auto;
    padding-inline: var(--space-m);
}

.flex {
    display: flex;
    gap: var(--space-m);
}

.grid {
    display: grid;
    gap: var(--space-m);
}

.flow > * + * {
    margin-top: var(--flow-space, var(--space-m));
}

.btn-primary {
    padding: 0.3em 1em;
    border-radius: 3px;
    transition: background-color 350ms ease-in-out;
}

.btn-primary:is(:hover, :focus-within) {
    background-color: hsl(var(--clr-accent) / 0.8);
}

.btn-secondary {
    padding: 0.3em 1em;
}

.btn-secondary:is(:hover, :focus-within) {
    outline: 2px solid hsl(var(--clr-accent));
}

.d-block {
    display: block;
}

/* Components */
main {
    min-height: 100vh;
    min-height: 100svh;
    align-items: center;
}

article {
    align-items: center;
    padding: var(--space-m);
    flex-wrap: wrap;

    & img {
        width: 3rem;
        aspect-ratio: 1;
        object-fit: cover;
    }

    & button {
        padding: 0.3em 1em;
        border-radius: 100vmax;

        &:is(:hover, :focus-within) {
            outline: 2px solid hsl(var(--clr-primary));
            outline-offset: -2px;
        }
    }

    & button:first-of-type {
        flex-shrink: 0;

        &:is(:hover, :focus-within) {
            outline: 2px solid hsl(var(--clr-primary));
            outline-offset: -2px;
        }
    }

    & button:nth-of-type(2) {
        transition: background-color 350ms ease-in-out;

        &:is(:hover, :focus-within) {
            outline-color: transparent;
            background-color: hsl(var(--clr-primary) / 0.8);
        }
    }
}
